import { Client } from "./client";
import { pb } from "./core";
import { Channel } from "./channel";
import { Sendable } from "./message";
export declare enum GuildRole {
    Member = 1,
    GuildAdmin = 2,
    Owner = 4,
    ChannelAdmin = 5
}
export interface GuildMember {
    tiny_id: string;
    card: string;
    nickname: string;
    role: GuildRole;
    join_time: number;
}
export declare class Guild {
    readonly c: Client;
    readonly guild_id: string;
    guild_name: string;
    channels: Map<string, Channel>;
    constructor(c: Client, guild_id: string);
    static as(this: Client, guild_id: string): Guild;
    sendMsg(channel_id: string, message: Sendable): Promise<{
        seq: number;
        rand: number;
        time: number;
    }>;
    _renew(guild_name: string, proto: pb.Proto | pb.Proto[]): void;
    /** 获取频道成员列表 */
    getMemberList(): Promise<GuildMember[]>;
}
